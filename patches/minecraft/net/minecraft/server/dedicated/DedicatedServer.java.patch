--- ../src-base/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
+++ ../src-work/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
@@ -4,16 +4,21 @@
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
+
+import joptsimple.OptionSet;
+
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStreamReader;
+import java.io.PrintStream;
 import java.net.InetAddress;
 import java.net.Proxy;
 import java.util.Collections;
 import java.util.List;
 import java.util.Random;
 import java.util.concurrent.TimeUnit;
+
 import net.minecraft.command.ICommandSender;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.ICrashReportDetail;
@@ -37,10 +42,15 @@
 import net.minecraft.world.World;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
+import net.minecraft.world.chunk.storage.AnvilSaveConverter;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+
+import org.apache.logging.log4j.Level;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.LoggerOutputStream;
+import org.bukkit.event.server.ServerCommandEvent;
 
 @SideOnly(Side.SERVER)
 public class DedicatedServer extends MinecraftServer implements IServer
@@ -48,15 +58,41 @@
     private static final Logger field_155771_h = LogManager.getLogger();
     public final List<PendingCommand> field_71341_l = Collections.<PendingCommand>synchronizedList(Lists.<PendingCommand>newArrayList());
     private RConThreadQuery field_71342_m;
-    private final RConConsoleSource field_184115_n = new RConConsoleSource(this);
+    public final RConConsoleSource field_184115_n = new RConConsoleSource(this);
     private RConThreadMain field_71339_n;
-    private PropertyManager field_71340_o;
+    public PropertyManager field_71340_o;
     private ServerEula field_154332_n;
     private boolean field_71338_p;
     private WorldSettings.GameType field_71337_q;
     private boolean field_71335_s;
     public static boolean allowPlayerLogins = false;
 
+    // CraftBukkit edition
+    public DedicatedServer(OptionSet options, DataFixer dataFixerIn, YggdrasilAuthenticationService authServiceIn, MinecraftSessionService sessionServiceIn, GameProfileRepository profileRepoIn, PlayerProfileCache profileCacheIn) {
+    	super(options, Proxy.NO_PROXY, dataFixerIn, authServiceIn, sessionServiceIn, profileRepoIn, profileCacheIn);
+        Thread thread = new Thread("Server Infinisleeper")
+        {
+            {
+                this.setDaemon(true);
+                this.start();
+            }
+            public void run()
+            {
+                while (true)
+                {
+                    try
+                    {
+                        Thread.sleep(2147483647L);
+                    }
+                    catch (InterruptedException var2)
+                    {
+                        ;
+                    }
+                }
+            }
+        };
+    }
+    
     public DedicatedServer(File p_i47086_1_, DataFixer p_i47086_2_, YggdrasilAuthenticationService p_i47086_3_, MinecraftSessionService p_i47086_4_, GameProfileRepository p_i47086_5_, PlayerProfileCache p_i47086_6_)
     {
         super(p_i47086_1_, Proxy.NO_PROXY, p_i47086_2_, p_i47086_3_, p_i47086_4_, p_i47086_5_, p_i47086_6_);
@@ -90,15 +126,33 @@
             public void run()
             {
                 if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
-                BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));
+                //BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));
+                // CraftBukkit start
+                //if (!org.bukkit.craftbukkit.Main.useConsole) {
+                //	return;
+                //}
+                // CraftBukkit end
+                
+                jline.console.ConsoleReader bufferedreader = reader; // CraftBukkit
                 String s4;
 
                 try
                 {
-                    while (!DedicatedServer.this.func_71241_aa() && DedicatedServer.this.func_71278_l() && (s4 = bufferedreader.readLine()) != null)
-                    {
-                        DedicatedServer.this.func_71331_a(s4, DedicatedServer.this);
-                    }
+                    //while (!DedicatedServer.this.isServerStopped() && DedicatedServer.this.isServerRunning() && (s4 = bufferedreader.readLine()) != null)
+                    //{
+                    //    DedicatedServer.this.addPendingCommand(s4, DedicatedServer.this);
+                	// CraftBukkit start - JLine disabling compatibility
+                	while (!func_71241_aa() && func_71278_l()) {
+                		if (org.bukkit.craftbukkit.Main.useJline) {
+                			s4 = bufferedreader.readLine(">", null);
+                		} else {
+                			s4 = bufferedreader.readLine();
+                		}
+                		if (s4 != null && s4.trim().length() > 0) { // Trim to filter lines which are just spaces
+                			DedicatedServer.this.func_71331_a(s4, DedicatedServer.this);
+                		}
+                		// CraftBukkit end
+                	}
                 }
                 catch (IOException ioexception1)
                 {
@@ -106,6 +160,28 @@
                 }
             }
         };
+        
+        // CraftBukkit start - TODO: handle command-line logging arguments
+        java.util.logging.Logger global = java.util.logging.Logger.getLogger("");
+        global.setUseParentHandlers(false);
+        for (java.util.logging.Handler handler : global.getHandlers()) {
+        	global.removeHandler(handler);
+        }
+        global.addHandler(new org.bukkit.craftbukkit.util.ForwardLogHandler());
+        	
+        final org.apache.logging.log4j.core.Logger logger = ((org.apache.logging.log4j.core.Logger) LogManager.getRootLogger());
+        for (org.apache.logging.log4j.core.Appender appender : logger.getAppenders().values()) {
+        	if (appender instanceof org.apache.logging.log4j.core.appender.ConsoleAppender) {
+        		logger.removeAppender(appender);
+        	}
+        }
+        
+        new Thread(new org.bukkit.craftbukkit.util.TerminalConsoleWriterThread(System.out, this.reader)).start();
+        	
+        System.setOut(new PrintStream(new LoggerOutputStream(logger, Level.INFO), true));
+        System.setErr(new PrintStream(new LoggerOutputStream(logger, Level.WARN), true));
+        // CraftBukkit end
+        
         thread.setDaemon(true);
         thread.start();
         field_155771_h.info("Starting minecraft server version 1.9.4");
@@ -189,6 +265,8 @@
                 return false;
             }
 
+            this.func_184105_a(new DedicatedPlayerList(this));
+            
             if (!this.func_71266_T())
             {
                 field_155771_h.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
@@ -208,8 +286,9 @@
             }
             else
             {
+            	this.field_71310_m = new AnvilSaveConverter(this.server.getWorldContainer(), this.func_184110_aI());
                 net.minecraftforge.fml.common.FMLCommonHandler.instance().onServerStarted();
-                this.func_184105_a(new DedicatedPlayerList(this));
+                //this.setPlayerList(new DedicatedPlayerList(this));
                 long j = System.nanoTime();
 
                 if (this.func_71270_I() == null)
@@ -277,7 +356,18 @@
                     field_155771_h.info("Starting remote control listener");
                     this.field_71339_n = new RConThreadMain(this);
                     this.field_71339_n.func_72602_a();
+                    this.remoteConsole = new org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender(this.field_184115_n); // CraftBukkit
                 }
+                
+                // CraftBukkit start
+                if (this.server.getBukkitSpawnRadius() > -1) {
+                	DedicatedServer.field_155771_h.info("'settings.spawn-radius' in bukkit.yml has been moved to 'spawn-protection' in server.properties. I will move your config for you.");
+                	this.field_71340_o.field_73672_b.remove("spawn-protection");
+                	this.field_71340_o.func_73669_a("spawn-protection", this.server.getBukkitSpawnRadius());
+                	this.server.removeBukkitSpawnRadius();
+                	this.field_71340_o.func_73668_b();
+                }
+                // CraftBukkit end
 
                 if (this.func_175593_aQ() > 0L)
                 {
@@ -418,7 +508,16 @@
         while (!this.field_71341_l.isEmpty())
         {
             PendingCommand pendingcommand = (PendingCommand)this.field_71341_l.remove(0);
-            this.func_71187_D().func_71556_a(pendingcommand.field_73701_b, pendingcommand.field_73702_a);
+            
+            //this.getCommandManager().executeCommand(pendingcommand.sender, pendingcommand.command);
+        	// CraftBukkit start - ServerCommand for preprocessing
+        	ServerCommandEvent event = new ServerCommandEvent(console, pendingcommand.field_73702_a);
+        	server.getPluginManager().callEvent(event);
+        	if (event.isCancelled()) continue;
+        	pendingcommand = new PendingCommand(event.getCommand(), pendingcommand.field_73701_b);
+        	
+        	server.dispatchServerCommand(console, pendingcommand);
+        	// CraftBukkit end
         }
     }
 
@@ -677,7 +776,30 @@
 
     public String func_71258_A()
     {
-        return "";
+        //return "";
+    	// CraftBukkit start - Whole method
+    	StringBuilder result = new StringBuilder();
+    	org.bukkit.plugin.Plugin[] plugins = server.getPluginManager().getPlugins();
+    		
+    	result.append(server.getName());
+    	result.append(" on Bukkit ");
+    	result.append(server.getBukkitVersion());
+    	
+    	if (plugins.length > 0 && server.getQueryPlugins()) {
+    		result.append(": ");
+    	
+    		for (int i = 0; i < plugins.length; i++) {
+    			if (i > 0) {
+    				result.append("; ");
+    			}
+    	
+    			result.append(plugins[i].getDescription().getName());
+    			result.append(" ");
+    			result.append(plugins[i].getDescription().getVersion().replaceAll(";", ","));
+    		}
+    	}
+    	return result.toString();
+    	// CraftBukkit end
     }
 
     public String func_71252_i(String p_71252_1_)
@@ -686,4 +808,11 @@
         this.field_71321_q.func_71556_a(this.field_184115_n, p_71252_1_);
         return this.field_184115_n.func_70008_c();
     }
+    
+    // CraftBukkit start
+    @Override
+    public PropertyManager getPropertyManager() {
+    	return this.field_71340_o;
+    }
+    // CraftBukkit end
 }
