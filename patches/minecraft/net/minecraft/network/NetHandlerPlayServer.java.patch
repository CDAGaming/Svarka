--- ../src-base/minecraft/net/minecraft/network/NetHandlerPlayServer.java
+++ ../src-work/minecraft/net/minecraft/network/NetHandlerPlayServer.java
@@ -4,14 +4,18 @@
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
 import com.google.common.util.concurrent.Futures;
+
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.Unpooled;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
+
 import java.io.IOException;
 import java.util.Collections;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
+
 import net.minecraft.block.BlockCommandBlock;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -108,10 +112,81 @@
 import net.minecraft.util.text.TextFormatting;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.WorldSettings;
+
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.command.CommandException;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
 
+
+
+
+
+
+
+import java.util.concurrent.ExecutionException;
+import java.util.logging.Level;
+import org.bukkit.Bukkit;
+import org.bukkit.ChatColor;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
+import org.bukkit.craftbukkit.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+
+import org.bukkit.Location;
+import org.bukkit.event.player.PlayerTeleportEvent;
+
+//CraftBukkit start
+import java.util.HashSet;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
+import java.util.logging.Level;
+
+import org.bukkit.Bukkit;
+import org.bukkit.ChatColor;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
+import org.bukkit.craftbukkit.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.SignChangeEvent;
+import org.bukkit.event.inventory.ClickType;
+import org.bukkit.event.inventory.CraftItemEvent;
+import org.bukkit.event.inventory.InventoryAction;
+import org.bukkit.event.inventory.InventoryClickEvent;
+import org.bukkit.event.inventory.InventoryCreativeEvent;
+import org.bukkit.event.inventory.InventoryType.SlotType;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerAnimationEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerInteractAtEntityEvent;
+import org.bukkit.event.player.PlayerInteractEntityEvent;
+import org.bukkit.event.player.PlayerItemHeldEvent;
+import org.bukkit.event.player.PlayerKickEvent;
+import org.bukkit.event.player.PlayerMoveEvent;
+import org.bukkit.event.player.PlayerResourcePackStatusEvent;
+import org.bukkit.event.player.PlayerSwapHandItemsEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerToggleFlightEvent;
+import org.bukkit.event.player.PlayerToggleSneakEvent;
+import org.bukkit.event.player.PlayerToggleSprintEvent;
+import org.bukkit.inventory.CraftingInventory;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.InventoryView;
+import org.bukkit.util.NumberConversions;
+// CraftBukkit end
+
 public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable
 {
     private static final Logger field_147370_c = LogManager.getLogger();
@@ -122,7 +197,11 @@
     private int field_147378_h;
     private long field_147379_i;
     private long field_147377_k;
-    private int field_147374_l;
+    // private int chatSpamThresholdCount;
+    // CraftBukkit start - multithreaded fields
+    private volatile int field_147374_l;
+    //private static final AtomicIntegerFieldUpdater chatSpamField = AtomicIntegerFieldUpdater.newUpdater(NetHandlerPlayServer.class, "chatThrottle"); //TODO!!!
+    // CraftBukkit end
     private int field_147375_m;
     private final IntHashMap<Short> field_147372_n = new IntHashMap();
     private double field_184349_l;
@@ -147,6 +226,7 @@
     private int field_184346_E;
     private int field_184347_F;
     private int field_184348_G;
+    private boolean processedDisconnect; // CraftBukkit - Added
 
     public NetHandlerPlayServer(MinecraftServer p_i1530_1_, NetworkManager p_i1530_2_, EntityPlayerMP p_i1530_3_)
     {
@@ -155,8 +235,31 @@
         p_i1530_2_.func_150719_a(this);
         this.field_147369_b = p_i1530_3_;
         p_i1530_3_.field_71135_a = this;
+        
+        // CraftBukkit start - add fields and methods
+        this.server = p_i1530_1_.server;
     }
-
+    
+    private final org.bukkit.craftbukkit.CraftServer server;
+    private int lastTick = MinecraftServer.currentTick;
+    private int allowedPlayerTicks = 1;
+    private int lastDropTick = MinecraftServer.currentTick;
+    private int dropCount = 0;
+    private static final int SURVIVAL_PLACE_DISTANCE_SQUARED = 6 * 6;
+    private static final int CREATIVE_PLACE_DISTANCE_SQUARED = 7 * 7;
+    
+    // Get position of last block hit for BlockDamageLevel.STOPPED
+    private double lastPosX = Double.MAX_VALUE;
+    private double lastPosY = Double.MAX_VALUE;
+    private double lastPosZ = Double.MAX_VALUE;
+    private float lastPitch = Float.MAX_VALUE;
+    private float lastYaw = Float.MAX_VALUE;
+    private boolean justTeleported = false;
+        
+    public CraftPlayer getPlayer() {
+    	return (this.field_147369_b == null) ? null : (CraftPlayer) this.field_147369_b.getBukkitEntity();
+    }
+    
     public void func_73660_a()
     {
         this.func_184342_d();
@@ -535,30 +638,116 @@
         double d0 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X) ? this.field_147369_b.field_70165_t : 0.0D;
         double d1 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y) ? this.field_147369_b.field_70163_u : 0.0D;
         double d2 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Z) ? this.field_147369_b.field_70161_v : 0.0D;
-        this.field_184362_y = new Vec3d(p_175089_1_ + d0, p_175089_3_ + d1, p_175089_5_ + d2);
-        float f = p_175089_7_;
-        float f1 = p_175089_8_;
+        /*this.targetPos = new Vec3d(x + d0, y + d1, z + d2); // Craftbukkit =_=
+        float f = yaw;
+        float f1 = pitch;
 
-        if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT))
+        if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT))
         {
-            f = p_175089_7_ + this.field_147369_b.field_70177_z;
+            f = yaw + this.playerEntity.rotationYaw;
         }
 
-        if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X_ROT))
+        if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.X_ROT))
         {
-            f1 = p_175089_8_ + this.field_147369_b.field_70125_A;
+            f1 = pitch + this.playerEntity.rotationPitch;
         }
 
-        if (++this.field_184363_z == Integer.MAX_VALUE)
+        if (++this.teleportId == Integer.MAX_VALUE)
         {
-            this.field_184363_z = 0;
+            this.teleportId = 0;
         }
 
-        this.field_184343_A = this.field_147368_e;
-        this.field_147369_b.func_70080_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, f, f1);
-        this.field_147369_b.field_71135_a.func_147359_a(new SPacketPlayerPosLook(p_175089_1_, p_175089_3_, p_175089_5_, p_175089_7_, p_175089_8_, p_175089_9_, this.field_184363_z));
+        this.lastPositionUpdate = this.networkTickCount;
+        this.playerEntity.setPositionAndRotation(this.targetPos.xCoord, this.targetPos.yCoord, this.targetPos.zCoord, f, f1);
+        this.playerEntity.connection.sendPacket(new SPacketPlayerPosLook(x, y, z, yaw, pitch, relativeSet, this.teleportId));*/
+        // CraftBukkit start - Delegate to teleport(Location)
+		Player player = this.getPlayer();
+		Location from = player.getLocation();
+
+		double x = d0;
+		double y = d1;
+		double z = d2;
+		float yaw = p_175089_7_;
+		float pitch = p_175089_8_;
+		if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X)) {
+			x += from.getX();
+		}
+		if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y)) {
+			y += from.getY();
+		}
+		if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Z)) {
+			z += from.getZ();
+		}
+		if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT)) {
+			yaw += from.getYaw();
+		}
+		if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X_ROT)) {
+			pitch += from.getPitch();
+		}
+
+		Location to = new Location(this.getPlayer().getWorld(), x, y, z, yaw, pitch);
+		PlayerTeleportEvent event = new PlayerTeleportEvent(player, from.clone(), to.clone(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
+		this.server.getPluginManager().callEvent(event);
+
+		if (event.isCancelled() || !to.equals(event.getTo())) {
+			p_175089_9_.clear(); // Can't relative teleport
+			to = event.isCancelled() ? event.getFrom() : event.getTo();
+			d0 = to.getX();
+			d1 = to.getY();
+			d2 = to.getZ();
+			p_175089_7_ = to.getYaw();
+			p_175089_8_ = to.getPitch();
+		}
+
+		this.internalTeleport(d0, d1, d2, p_175089_7_, p_175089_8_, p_175089_9_);
     }
+    
+	public void teleport(Location dest) {
+		internalTeleport(dest.getX(), dest.getY(), dest.getZ(), dest.getYaw(), dest.getPitch(), Collections.emptySet());
+	}
 
+	private void internalTeleport(double d0, double d1, double d2, float yaw, float pitch, Set relativeSet) {
+		if (Float.isNaN(yaw)) {
+			yaw = 0;
+		}
+
+		if (Float.isNaN(pitch)) {
+			pitch = 0;
+		}
+		this.justTeleported = true;
+		this.field_184362_y = new Vec3d(d0, d1, d2);
+		if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.X)) {
+			this.field_184362_y = this.field_184362_y.func_72441_c(this.field_147369_b.field_70165_t, 0.0D, 0.0D);
+		}
+
+		if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Y)) {
+			this.field_184362_y = this.field_184362_y.func_72441_c(0.0D, this.field_147369_b.field_70163_u, 0.0D);
+		}
+
+		if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Z)) {
+			this.field_184362_y = this.field_184362_y.func_72441_c(0.0D, 0.0D, this.field_147369_b.field_70161_v);
+		}
+		// CraftBukkit end
+		float f = yaw;
+		float f1 = pitch;
+
+		if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT)) {
+			f = yaw + this.field_147369_b.field_70177_z;
+		}
+
+		if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.X_ROT)) {
+			f1 = pitch + this.field_147369_b.field_70125_A;
+		}
+
+		if (++this.field_184363_z == Integer.MAX_VALUE) {
+			this.field_184363_z = 0;
+		}
+
+		this.field_184343_A = this.field_147368_e;
+		this.field_147369_b.func_70080_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, f, f1);
+		this.field_147369_b.field_71135_a.func_147359_a(new SPacketPlayerPosLook(d0, d1, d2, yaw, pitch, relativeSet, this.field_184363_z));
+	}
+
     public void func_147345_a(CPacketPlayerDigging p_147345_1_)
     {
         PacketThreadUtil.func_180031_a(p_147345_1_, this, this.field_147369_b.func_71121_q());
@@ -866,9 +1055,15 @@
 
     public void func_147354_a(CPacketChatMessage p_147354_1_)
     {
-        PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+    	// CraftBukkit start - async chat
+    	boolean isSync = p_147354_1_.func_149439_c().startsWith("/");
+    	
+    	if(isSync) {
+    		PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+    	}
+    	// CraftBukkit end
 
-        if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN)
+        if (this.field_147369_b.field_70128_L && this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN)// CraftBukkit - dead men tell no tales
         {
             TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("chat.cannotSend", new Object[0]);
             textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.RED);
@@ -884,35 +1079,201 @@
             {
                 if (!ChatAllowedCharacters.func_71566_a(s.charAt(i)))
                 {
-                    this.func_147360_c("Illegal characters in chat");
-                    return;
+                	// CraftBukkit start - threadsafety
+                    //this.kickPlayerFromServer("Illegal characters in chat");
+                    //return;
+                	if(!isSync) {
+                		Waitable<?> e = new Waitable<Object>() {
+                			protected Object evaluate() {
+                				NetHandlerPlayServer.this.func_147360_c("Illegal characters in chat");
+                				return null;
+                			}
+                		};
+                        this.field_147367_d.processQueue.add(e);
+
+                        try {
+                        	e.get();
+                        } catch (InterruptedException var12) {
+                        	Thread.currentThread().interrupt();
+                        } catch (ExecutionException var13) {
+                           throw new RuntimeException(var13);
+                        }
+                	} else {
+                		this.func_147360_c("Illegal characters in chat");
+                	}
+                	
+                	return;
+                	// CraftBukkit end
                 }
             }
 
-            if (s.startsWith("/"))
+            /*if (s.startsWith("/"))
             {
-                this.func_147361_d(s);
+                this.handleSlashCommand(s);
             }
             else
             {
-                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.field_147369_b.func_145748_c_(), net.minecraftforge.common.ForgeHooks.newChatWithLinks(s));
+                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.playerEntity.getDisplayName(), net.minecraftforge.common.ForgeHooks.newChatWithLinks(s));
                 itextcomponent = net.minecraftforge.common.ForgeHooks.onServerChatEvent(this, s, itextcomponent);
                 if (itextcomponent == null) return;
-                this.field_147367_d.func_184103_al().func_148544_a(itextcomponent, false);
+                this.serverController.getPlayerList().sendChatMsgImpl(itextcomponent, false);
             }
 
-            this.field_147374_l += 20;
+            this.chatSpamThresholdCount += 20;
 
-            if (this.field_147374_l > 200 && !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH()))
+            if (this.chatSpamThresholdCount > 200 && !this.serverController.getPlayerList().canSendCommands(this.playerEntity.getGameProfile()))
             {
-                this.func_147360_c("disconnect.spam");
-            }
+                this.kickPlayerFromServer("disconnect.spam");
+            }*/
+            
+			if (isSync) {
+				try {
+					this.field_147367_d.server.playerCommandState = true;
+					this.func_147361_d(s);
+				} finally {
+					this.field_147367_d.server.playerCommandState = false;
+				}
+			} else if (s.isEmpty()) {
+				field_147370_c.warn(this.field_147369_b.func_70005_c_() + " tried to send an empty message");
+			} else if (this.getPlayer().isConversing()) {
+				this.getPlayer().acceptConversationInput(s);
+			} else if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.SYSTEM) {
+				TextComponentTranslation var18 = new TextComponentTranslation("chat.cannotSend", new Object[0]);
+				var18.func_150256_b().func_150238_a(TextFormatting.RED);
+				this.func_147359_a(new SPacketChat(var18));
+			} else {
+				this.chat(s, true); //TODO!!!
+			}
+
+			this.field_147374_l += 20;
+			if (/*chatSpamField.addAndGet(this, 20) > 200 && TODO!!!*/this.field_147374_l > 200 /*Svarka - temp*/&& !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH())) {
+				if (!isSync) {
+					Waitable var19 = new Waitable() {
+						protected Object evaluate() {
+							NetHandlerPlayServer.this
+									.func_147360_c("disconnect.spam");
+							return null;
+						}
+					};
+					this.field_147367_d.processQueue.add(var19);
+
+					try {
+						var19.get();
+					} catch (InterruptedException var14) {
+						Thread.currentThread().interrupt();
+					} catch (ExecutionException var15) {
+						throw new RuntimeException(var15);
+					}
+				} else {
+					this.func_147360_c("disconnect.spam");
+				}
+			}
         }
     }
+    
+    // CraftBukkit start - whole method
+	public void chat(String s, boolean async) {
+		if (!s.isEmpty() && this.field_147369_b.func_147096_v() != EntityPlayer.EnumChatVisibility.HIDDEN) {
+			if (!async && s.startsWith("/")) {
+				this.func_147361_d(s);
+			} else if (this.field_147369_b.func_147096_v() != EntityPlayer.EnumChatVisibility.SYSTEM) {
+				CraftPlayer player = this.getPlayer();
+				AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(this.field_147367_d));
+				this.server.getPluginManager().callEvent(event);
+				if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+					final PlayerChatEvent recipient = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+					recipient.setCancelled(event.isCancelled());
+					Waitable waitable = new Waitable() {
+						protected Object evaluate() {
+							Bukkit.getPluginManager().callEvent(recipient);
+							if (recipient.isCancelled()) {
+								return null;
+							} else {
+								String message = String.format(recipient.getFormat(), new Object[] { recipient.getPlayer().getDisplayName(), recipient.getMessage() });
+								NetHandlerPlayServer.this.field_147367_d.console.sendMessage(message);
+								Iterator var2;
+								if (((LazyPlayerSet) recipient.getRecipients()).isLazy()) {
+									var2 = NetHandlerPlayServer.this.field_147367_d.func_184103_al().field_72404_b.iterator();
 
+									while (var2.hasNext()) {
+										Object player = var2.next();
+										((EntityPlayerMP) player).sendMessage(CraftChatMessage.fromString(message));
+									}
+								} else {
+									var2 = recipient.getRecipients().iterator();
+
+									while (var2.hasNext()) {
+										Player player1 = (Player) var2.next();
+										player1.sendMessage(message);
+									}
+								}
+
+								return null;
+							}
+						}
+					};
+					if (async) {
+						this.field_147367_d.processQueue.add(waitable);
+					} else {
+						waitable.run();
+					}
+
+					try {
+						waitable.get();
+					} catch (InterruptedException var8) {
+						Thread.currentThread().interrupt();
+					} catch (ExecutionException var9) {
+						throw new RuntimeException("Exception processing chat event", var9.getCause());
+					}
+				} else {
+					if (event.isCancelled()) {
+						return;
+					}
+
+					s = String.format(event.getFormat(), new Object[] { event.getPlayer().getDisplayName(), event.getMessage() });
+					this.field_147367_d.console.sendMessage(s);
+					Iterator waitable1;
+					if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+						waitable1 = this.field_147367_d.func_184103_al().field_72404_b.iterator();
+
+						while (waitable1.hasNext()) {
+							Object recipient1 = waitable1.next();
+							((EntityPlayerMP) recipient1).sendMessage(CraftChatMessage.fromString(s));
+						}
+					} else {
+						waitable1 = event.getRecipients().iterator();
+
+						while (waitable1.hasNext()) {
+							Player recipient2 = (Player) waitable1.next();
+							recipient2.sendMessage(s);
+						}
+					}
+				}
+			}
+
+		}
+	}
+	// CraftBukkit end
+
     private void func_147361_d(String p_147361_1_)
     {
-        this.field_147367_d.func_71187_D().func_71556_a(this.field_147369_b, p_147361_1_);
+    	// CraftBukkit start - whole method
+    	field_147370_c.info(this.field_147369_b.func_70005_c_() + " issued server command: " + p_147361_1_);
+        CraftPlayer player = this.getPlayer();
+        PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, p_147361_1_, new LazyPlayerSet(this.field_147367_d));
+        this.server.getPluginManager().callEvent(event);
+        if(!event.isCancelled()) {
+           try {
+              if(!this.server.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+                 ;
+              }
+           } catch (CommandException var5) {
+              player.sendMessage(ChatColor.RED + "An internal error occurred while attempting to perform this command");
+              java.util.logging.Logger.getLogger(NetHandlerPlayServer.class.getName()).log(Level.SEVERE, (String)null, var5);
+           }
+        }
+        //this.serverController.getCommandManager().executeCommand(this.playerEntity, command);
+    	// CraftBukkit end
     }
 
     public void func_175087_a(CPacketAnimation p_175087_1_)
