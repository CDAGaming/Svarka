--- ../src-base/minecraft/net/minecraftforge/fml/common/discovery/JarDiscoverer.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/discovery/JarDiscoverer.java
@@ -19,12 +19,10 @@
 
 package net.minecraftforge.fml.common.discovery;
 
-import java.io.InputStream;
 import java.util.Collections;
 import java.util.List;
 import java.util.jar.JarFile;
 
-import net.minecraftforge.common.util.Java6Utils;
 import net.minecraftforge.fml.common.FMLLog;
 import net.minecraftforge.fml.common.LoaderException;
 import net.minecraftforge.fml.common.MetadataCollection;
@@ -32,7 +30,6 @@
 import net.minecraftforge.fml.common.ModContainerFactory;
 import net.minecraftforge.fml.common.discovery.asm.ASMModParser;
 
-import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.Level;
 
 import java.util.regex.Matcher;
@@ -57,15 +54,7 @@
             if (modInfo != null)
             {
                 FMLLog.finer("Located mcmod.info file in file %s", candidate.getModContainer().getName());
-                InputStream inputStream = jar.getInputStream(modInfo);
-                try
-                {
-                    mc = MetadataCollection.from(inputStream, candidate.getModContainer().getName());
-                }
-                finally
-                {
-                    IOUtils.closeQuietly(inputStream);
-                }
+                mc = MetadataCollection.from(jar.getInputStream(modInfo), candidate.getModContainer().getName());
             }
             else
             {
@@ -84,15 +73,7 @@
                     ASMModParser modParser;
                     try
                     {
-                        InputStream inputStream = jar.getInputStream(ze);
-                        try
-                        {
-                            modParser = new ASMModParser(inputStream);
-                        }
-                        finally
-                        {
-                            IOUtils.closeQuietly(inputStream);
-                        }
+                        modParser = new ASMModParser(jar.getInputStream(ze));
                         candidate.addClassEntry(ze.getName());
                     }
                     catch (LoaderException e)
@@ -120,7 +101,16 @@
         }
         finally
         {
-            Java6Utils.closeZipQuietly(jar);
+            if (jar != null)
+            {
+                try
+                {
+                    jar.close();
+                }
+                catch (Exception e)
+                {
+                }
+            }
         }
         return foundMods;
     }
