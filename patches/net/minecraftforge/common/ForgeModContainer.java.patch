--- ../src-base/minecraft/net/minecraftforge/common/ForgeModContainer.java
+++ ../src-work/minecraft/net/minecraftforge/common/ForgeModContainer.java
@@ -110,7 +110,6 @@
     public static boolean replaceVanillaBucketModel = true;
     public static long java8Reminder = 0;
     public static boolean disableStairSlabCulling = false; // Also known as the "DontCullStairsBecauseIUseACrappyTexturePackThatBreaksBasicBlockShapesSoICantTrustBasicBlockCulling" flag
-    public static boolean alwaysSetupTerrainOffThread = false; // In RenderGlobal.setupTerrain, always force the chunk render updates to be queued to the thread
 
     private static Configuration config;
     private static ForgeModContainer INSTANCE;
@@ -297,13 +296,6 @@
         prop.setLanguageKey("forge.configgui.disableStairSlabCulling").setRequiresMcRestart(false);
         propOrder.add(prop.getName());
 
-        prop = config.get(Configuration.CATEGORY_CLIENT, "alwaysSetupTerrainOffThread", Boolean.FALSE,
-                "Enable forge to queue all chunk updates to the Chunk Update thread. May increase FPS significantly, but may also cause weird rendering lag. Not recommended for computers " +
-                "without a significant number of cores available.");
-        alwaysSetupTerrainOffThread = prop.getBoolean(Boolean.FALSE);
-        prop.setLanguageKey("forge.configgui.alwaysSetupTerrainOffThread");
-        propOrder.add(prop.getName());
-
         config.setCategoryPropertyOrder(CATEGORY_CLIENT, propOrder);
 
         if (config.hasChanged())
@@ -328,22 +320,30 @@
     {
         if (getMetadata().modId.equals(event.getModID()))
         {
-            if ("chunkLoader".equals(event.getConfigID()))
+            if (!event.isWorldRunning())
             {
-                ForgeChunkManager.syncConfigDefaults();
-                ForgeChunkManager.loadConfiguration();
+                if (Configuration.CATEGORY_GENERAL.equals(event.getConfigID()))
+                {
+                    syncConfig(false);
+                }
+                else if ("chunkLoader".equals(event.getConfigID()))
+                {
+                    ForgeChunkManager.syncConfigDefaults();
+                    ForgeChunkManager.loadConfiguration();
+                }
+                else if (VERSION_CHECK_CAT.equals(event.getConfigID()))
+                {
+                    syncConfig(false);
+                }
             }
             else
             {
-                boolean tmpStairs = disableStairSlabCulling;
-
-                syncConfig(false);
-
-                if (event.isWorldRunning() && tmpStairs != disableStairSlabCulling)
+                boolean tmp = config.get(Configuration.CATEGORY_CLIENT, "disableStairSlabCulling", disableStairSlabCulling).getBoolean();
+                if (disableStairSlabCulling != tmp)
                 {
+                    disableStairSlabCulling = tmp;
                     FMLCommonHandler.instance().reloadRenderers();
                 }
-
             }
         }
     }
