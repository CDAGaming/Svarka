--- ../src-base/minecraft/net/minecraftforge/common/ForgeModContainer.java
+++ ../src-work/minecraft/net/minecraftforge/common/ForgeModContainer.java
@@ -163,15 +163,15 @@
 
         Property prop;
 
-        prop = config.get(CATEGORY_GENERAL, "disableVersionCheck", false);
-        prop.setComment("Set to true to disable Forge's version check mechanics. Forge queries a small json file on our server for version information. For more details see the ForgeVersion class in our github.");
+        //prop = config.get(CATEGORY_GENERAL, "disableVersionCheck", false); // Svarka - just no!
+        //prop.setComment("Set to true to disable Forge's version check mechanics. Forge queries a small json file on our server for version information. For more details see the ForgeVersion class in our github.");
         // Language keys are a good idea to implement if you are using config GUIs. This allows you to use a .lang file that will hold the
         // "pretty" version of the property name as well as allow others to provide their own localizations.
         // This language key is also used to get the tooltip for a property. The tooltip language key is langKey + ".tooltip".
         // If no tooltip language key is defined in your .lang file, the tooltip will default to the property comment field.
-        prop.setLanguageKey("forge.configgui.disableVersionCheck");
-        disableVersionCheck = prop.getBoolean(disableVersionCheck);
-        propOrder.add(prop.getName());
+        //prop.setLanguageKey("forge.configgui.disableVersionCheck");
+        //disableVersionCheck = prop.getBoolean(disableVersionCheck);
+        //propOrder.add(prop.getName());
 
         prop = config.get(Configuration.CATEGORY_GENERAL, "clumpingThreshold", 64,
                 "Controls the number threshold at which Packet51 is preferred over Packet52, default and minimum 64, maximum 1024", 64, 1024);
@@ -379,10 +379,11 @@
         ForgeChunkManager.captureConfig(evt.getModConfigurationDirectory());
         MinecraftForge.EVENT_BUS.register(this);
 
-        if (!ForgeModContainer.disableVersionCheck)
-        {
-            ForgeVersion.startVersionCheck();
-        }
+        // Svarka
+        //if (!ForgeModContainer.disableVersionCheck)
+        //{
+            // ForgeVersion.startVersionCheck();
+        //}
 
         // Add and register the forge universal bucket, if it's enabled
         if(FluidRegistry.isUniversalBucketEnabled())
