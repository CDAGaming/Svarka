--- ../src-base/minecraft/net/minecraftforge/common/ForgeHooks.java
+++ ../src-work/minecraft/net/minecraftforge/common/ForgeHooks.java
@@ -43,7 +43,6 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiScreen;
-import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityList;
 import net.minecraft.entity.EntityLivingBase;
@@ -115,7 +114,6 @@
 import net.minecraftforge.event.entity.living.LootingLevelEvent;
 import net.minecraftforge.event.entity.player.AnvilRepairEvent;
 import net.minecraftforge.event.entity.player.AttackEntityEvent;
-import net.minecraftforge.event.entity.player.PlayerEvent;
 import net.minecraftforge.event.entity.player.PlayerInteractEvent;
 import net.minecraftforge.event.world.BlockEvent;
 import net.minecraftforge.event.world.NoteBlockEvent;
@@ -312,7 +310,7 @@
                     return;
                 }
 
-                itemstack = block.func_185473_a(this.theWorld, blockpos, iblockstate);
+                itemstack = block.getItem(this.theWorld, blockpos, iblockstate);
 
                 if (itemstack == null)
                 {
@@ -358,7 +356,7 @@
                     EntityMinecart entityminecart = (EntityMinecart)this.objectMouseOver.entityHit;
                     Item item;
 
-                    switch (entityminecart.func_184264_v())
+                    switch (entityminecart.getType())
                     {
                         case FURNACE:
                             item = Items.furnace_minecart;
@@ -383,7 +381,7 @@
                 }
                 else if (this.objectMouseOver.entityHit instanceof EntityBoat)
                 {
-                    itemstack = new ItemStack(((EntityBoat)this.objectMouseOver.entityHit).func_184455_j());
+                    itemstack = new ItemStack(((EntityBoat)this.objectMouseOver.entityHit).getItemBoat());
                 }
                 else if (this.objectMouseOver.entityHit instanceof EntityArmorStand)
                 {
@@ -391,7 +389,7 @@
                 }
                 else if (this.objectMouseOver.entityHit instanceof EntityEnderCrystal)
                 {
-                    itemstack = new ItemStack(Items.field_185158_cP);
+                    itemstack = new ItemStack(Items.END_CRYSTAL);
                 }
                 else
                 {
@@ -403,7 +401,7 @@
                     }
 
                     itemstack = new ItemStack(Items.spawn_egg);
-                    ItemMonsterPlacer.func_185078_a(itemstack, s);
+                    ItemMonsterPlacer.applyEntityIdToItemStack(itemstack, s);
                 }
             }
          */
@@ -520,35 +518,12 @@
         return (MinecraftForge.EVENT_BUS.post(event) ? null : new float[]{event.getDistance(), event.getDamageMultiplier()});
     }
 
-    public static int getLootingLevel(Entity target, Entity killer, DamageSource cause)
-    {
-        int looting = 0;
-        if (killer instanceof EntityLivingBase)
-        {
-            looting = EnchantmentHelper.getLootingModifier((EntityLivingBase)killer);
-        }
-        if (target instanceof EntityLivingBase)
-        {
-            looting = getLootingLevel((EntityLivingBase)target, cause, looting);
-        }
-        return looting;
-    }
-
-    public static int getLootingLevel(EntityLivingBase target, DamageSource cause, int level)
-    {
+    public static int getLootingLevel(EntityLivingBase target, DamageSource cause, int level) {
         LootingLevelEvent event = new LootingLevelEvent(target, cause, level);
         MinecraftForge.EVENT_BUS.post(event);
         return event.getLootingLevel();
     }
 
-    public static double getPlayerVisibilityDistance(EntityPlayer player, double xzDistance, double maxXZDistance)
-    {
-        PlayerEvent.Visibility event = new PlayerEvent.Visibility(player);
-        MinecraftForge.EVENT_BUS.post(event);
-        double value = event.getVisibilityModifier() * xzDistance;
-        return value >= maxXZDistance ? maxXZDistance : value;
-    }
-
     public static boolean isLivingOnLadder(IBlockState state, World world, BlockPos pos, EntityLivingBase entity)
     {
         boolean isSpectator = (entity instanceof EntityPlayer && ((EntityPlayer)entity).isSpectator());
@@ -804,11 +779,11 @@
             }
             if (blockSnapshots.size() > 1)
             {
-                placeEvent = ForgeEventFactory.onPlayerMultiBlockPlace(player, blockSnapshots, side, hand);
+                placeEvent = ForgeEventFactory.onPlayerMultiBlockPlace(player, blockSnapshots, side);
             }
             else if (blockSnapshots.size() == 1)
             {
-                placeEvent = ForgeEventFactory.onPlayerBlockPlace(player, blockSnapshots.get(0), side, hand);
+                placeEvent = ForgeEventFactory.onPlayerBlockPlace(player, blockSnapshots.get(0), side);
             }
 
             if (placeEvent != null && (placeEvent.isCanceled()))
@@ -884,7 +859,7 @@
     }
 
     /**
-     * Default implementation of IRecipe.func_179532_b {getRemainingItems} because
+     * Default implementation of IRecipe.getRemainingItems {getRemainingItems} because
      * this is just copy pasted over a lot of recipes.
      *
      * Another use case for java 8 but sadly we can't use it!
@@ -1172,16 +1147,4 @@
     {
         return MinecraftForge.EVENT_BUS.post(new ThrowableImpactEvent(throwable, ray));
     }
-
-    public static boolean onCropsGrowPre(World worldIn, BlockPos pos, IBlockState state, boolean def)
-    {
-        BlockEvent ev = new BlockEvent.CropGrowEvent.Pre(worldIn,pos,state);
-        MinecraftForge.EVENT_BUS.post(ev);
-        return (ev.getResult() == Event.Result.ALLOW || (ev.getResult() == Event.Result.DEFAULT && def));
-    }
-
-	public static void onCropsGrowPost(World worldIn, BlockPos pos, IBlockState state, IBlockState blockState)
-	{
-		MinecraftForge.EVENT_BUS.post(new BlockEvent.CropGrowEvent.Post(worldIn, pos, state, worldIn.getBlockState(pos)));
-	}
 }
