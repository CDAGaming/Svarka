--- ../src-base/minecraft/net/minecraftforge/common/ForgeChunkManager.java
+++ ../src-work/minecraft/net/minecraftforge/common/ForgeChunkManager.java
@@ -470,10 +470,7 @@
             return;
         }
 
-        if (dormantChunkCacheSize != 0)
-        { // only put into cache if we're using dormant chunk caching
-            dormantChunkCache.put(world, CacheBuilder.newBuilder().maximumSize(dormantChunkCacheSize).<Long, Chunk>build());
-        }
+        dormantChunkCache.put(world, CacheBuilder.newBuilder().maximumSize(dormantChunkCacheSize).<Long, Chunk>build());
         WorldServer worldServer = (WorldServer) world;
         File chunkDir = worldServer.getChunkSaveLocation();
         File chunkLoaderData = new File(chunkDir, "forcedchunks.dat");
@@ -618,10 +615,7 @@
         }
 
         forcedChunks.remove(world);
-        if (dormantChunkCacheSize != 0) // only if in use
-        {
-            dormantChunkCache.remove(world);
-        }
+        dormantChunkCache.remove(world);
         // integrated server is shutting down
         if (!FMLCommonHandler.instance().getMinecraftServerInstance().isServerRunning())
         {
@@ -965,7 +959,6 @@
 
     public static void putDormantChunk(long coords, Chunk chunk)
     {
-        if (dormantChunkCacheSize == 0) return; // Skip if we're not dormant caching chunks
         Cache<Long, Chunk> cache = dormantChunkCache.get(chunk.getWorld());
         if (cache != null)
         {
@@ -975,7 +968,6 @@
 
     public static Chunk fetchDormantChunk(long coords, World world)
     {
-        if (dormantChunkCacheSize == 0) return null; // Don't bother with maps at all if its never gonna get a response
         Cache<Long, Chunk> cache = dormantChunkCache.get(world);
         if (cache == null)
         {
