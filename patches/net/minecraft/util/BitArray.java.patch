--- ../src-base/minecraft/net/minecraft/util/BitArray.java
+++ ../src-work/minecraft/net/minecraft/util/BitArray.java
@@ -6,54 +6,74 @@
 public class BitArray
 {
     private final long[] field_188145_a;
-    private final int field_188146_b;
-    private final long field_188147_c;
+    //private final int bitsPerEntry;
+    //private final long maxEntryValue;
     private final int field_188148_d;
 
     public BitArray(int p_i46832_1_, int p_i46832_2_)
     {
         Validate.inclusiveBetween(1L, 32L, (long)p_i46832_1_);
         this.field_188148_d = p_i46832_2_;
-        this.field_188146_b = p_i46832_1_;
-        this.field_188147_c = (1L << p_i46832_1_) - 1L;
+        //this.bitsPerEntry = bitsPerEntryIn;
+        //this.maxEntryValue = (1L << bitsPerEntryIn) - 1L;
         this.field_188145_a = new long[MathHelper.func_154354_b(p_i46832_2_ * p_i46832_1_, 64) / 64];
     }
 
     public void func_188141_a(int p_188141_1_, int p_188141_2_)
     {
-        Validate.inclusiveBetween(0L, (long)(this.field_188148_d - 1), (long)p_188141_1_);
-        Validate.inclusiveBetween(0L, this.field_188147_c, (long)p_188141_2_);
-        int i = p_188141_1_ * this.field_188146_b;
+        /*Validate.inclusiveBetween(0L, (long)(this.arraySize - 1), (long)index);
+        Validate.inclusiveBetween(0L, this.maxEntryValue, (long)value);
+        int i = index * this.bitsPerEntry;
         int j = i / 64;
-        int k = ((p_188141_1_ + 1) * this.field_188146_b - 1) / 64;
+        int k = ((index + 1) * this.bitsPerEntry - 1) / 64;
         int l = i % 64;
-        this.field_188145_a[j] = this.field_188145_a[j] & ~(this.field_188147_c << l) | ((long)p_188141_2_ & this.field_188147_c) << l;
+        this.longArray[j] = this.longArray[j] & ~(this.maxEntryValue << l) | ((long)value & this.maxEntryValue) << l;
 
         if (j != k)
         {
             int i1 = 64 - l;
-            int j1 = this.field_188146_b - i1;
-            this.field_188145_a[k] = this.field_188145_a[k] >>> j1 << j1 | ((long)p_188141_2_ & this.field_188147_c) >> i1;
-        }
+            int j1 = this.bitsPerEntry - i1;
+            this.longArray[k] = this.longArray[k] >>> j1 << j1 | ((long)value & this.maxEntryValue) >> i1;
+        }*/
+    	int longIndex = p_188141_1_ >>> 2;
+        int entry = /*(index >> 2)*/p_188141_1_ & 0x3;
+        //long val = (value << (16 * entry));
+        //this.longArray[longIndex] = 
+        //		(this.longArray[longIndex] & ((~(0xFFFF) | value) << (16 * entry))) | val;
+        //int int1 = (int) ((this.longArray[longIndex] >> 0) & 0xFFFF);
+        //int int2 = (int) ((this.longArray[longIndex] >> 16) & 0xFFFF);
+        //int int3 = (int) ((this.longArray[longIndex] >> 32) & 0xFFFF);
+        //int int4 = (int) ((this.longArray[longIndex] >> 48) & 0xFFFF);
+        
+        //this.longArray[longIndex] = val;
+        
+        this.field_188145_a[longIndex] = this.field_188145_a[longIndex] & ~((long)0xFFFF << (entry * 16));
+        long value2 = p_188141_2_;
+        this.field_188145_a[longIndex] = this.field_188145_a[longIndex] | (value2 << (entry * 16));
+        //int x = 0;
+    	
     }
 
     public int func_188142_a(int p_188142_1_)
     {
-        Validate.inclusiveBetween(0L, (long)(this.field_188148_d - 1), (long)p_188142_1_);
-        int i = p_188142_1_ * this.field_188146_b;
+        /*Validate.inclusiveBetween(0L, (long)(this.arraySize - 1), (long)index);
+        int i = index * this.bitsPerEntry;
         int j = i / 64;
-        int k = ((p_188142_1_ + 1) * this.field_188146_b - 1) / 64;
+        int k = ((index + 1) * this.bitsPerEntry - 1) / 64;
         int l = i % 64;
 
         if (j == k)
         {
-            return (int)(this.field_188145_a[j] >>> l & this.field_188147_c);
+            return (int)(this.longArray[j] >>> l & this.maxEntryValue);
         }
         else
         {
             int i1 = 64 - l;
-            return (int)((this.field_188145_a[j] >>> l | this.field_188145_a[k] << i1) & this.field_188147_c);
-        }
+            return (int)((this.longArray[j] >>> l | this.longArray[k] << i1) & this.maxEntryValue);
+        }*/
+    	long lng = this.field_188145_a[p_188142_1_ >>> 2];
+    	int id = (int) ((lng >>> (16 * (p_188142_1_ & 0x3))) & 0xFFFF);
+    	return id;
     }
 
     public long[] func_188143_a()
