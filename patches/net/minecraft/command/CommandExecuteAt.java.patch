--- ../src-base/minecraft/net/minecraft/command/CommandExecuteAt.java
+++ ../src-work/minecraft/net/minecraft/command/CommandExecuteAt.java
@@ -2,16 +2,29 @@
 
 import java.util.Collections;
 import java.util.List;
+
 import javax.annotation.Nullable;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.dedicated.DedicatedServer;
+import net.minecraft.tileentity.CommandBlockBaseLogic;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.world.World;
 
+
+
+import org.bukkit.craftbukkit.command.VanillaCommandWrapper;
+
+//CraftBukkit start
+import org.bukkit.craftbukkit.command.ProxiedNativeCommandSender;
+import org.bukkit.craftbukkit.command.VanillaCommandWrapper;
+// CraftBukkit end
+
 public class CommandExecuteAt extends CommandBase
 {
     public String func_71517_b()
@@ -64,66 +77,95 @@
             }
 
             String s = func_180529_a(p_184881_3_, i);
-            ICommandSender icommandsender = new ICommandSender()
+            /*class ProxyListener implements ICommandSender
             {
-                public String func_70005_c_()
+            	private final ICommandSender base = sender;
+            	
+                public String getName()
                 {
-                    return entity.func_70005_c_();
+                    return entity.getName();
                 }
-                public ITextComponent func_145748_c_()
+                public ITextComponent getDisplayName()
                 {
-                    return entity.func_145748_c_();
+                    return entity.getDisplayName();
                 }
-                public void func_145747_a(ITextComponent p_145747_1_)
+                public void addChatMessage(ITextComponent component)
                 {
-                    p_184881_2_.func_145747_a(p_145747_1_);
+                    sender.addChatMessage(component);
                 }
-                public boolean func_70003_b(int p_70003_1_, String p_70003_2_)
+                public boolean canCommandSenderUseCommand(int permLevel, String commandName)
                 {
-                    return p_184881_2_.func_70003_b(p_70003_1_, p_70003_2_);
+                    return sender.canCommandSenderUseCommand(permLevel, commandName);
                 }
-                public BlockPos func_180425_c()
+                public BlockPos getPosition()
                 {
                     return blockpos;
                 }
-                public Vec3d func_174791_d()
+                public Vec3d getPositionVector()
                 {
                     return new Vec3d(d0, d1, d2);
                 }
-                public World func_130014_f_()
+                public World getEntityWorld()
                 {
-                    return entity.field_70170_p;
+                    return entity.worldObj;
                 }
-                public Entity func_174793_f()
+                public Entity getCommandSenderEntity()
                 {
                     return entity;
                 }
-                public boolean func_174792_t_()
+                public boolean sendCommandFeedback()
                 {
-                    return p_184881_1_ == null || p_184881_1_.field_71305_c[0].func_82736_K().func_82766_b("commandBlockOutput");
+                    return server == null || server.worldServers[0].getGameRules().getBoolean("commandBlockOutput");
                 }
-                public void func_174794_a(CommandResultStats.Type p_174794_1_, int p_174794_2_)
+                public void setCommandStat(CommandResultStats.Type type, int amount)
                 {
-                    entity.func_174794_a(p_174794_1_, p_174794_2_);
+                    entity.setCommandStat(type, amount);
                 }
-                public MinecraftServer func_184102_h()
+                public MinecraftServer getServer()
                 {
-                    return entity.func_184102_h();
+                    return entity.getServer();
                 }
-            };
+            }
+            ProxyListener icommandsender = new ProxyListener();
+            */
             ICommandManager icommandmanager = p_184881_1_.func_71187_D();
 
             try
             {
-                int j = icommandmanager.func_71556_a(icommandsender, s);
+                //int j = icommandmanager.executeCommand(icommandsender, s);
+            	// CraftBukkit start
+            	org.bukkit.command.CommandSender senderB = null;
+            	ICommandSender listener = p_184881_2_;
+            	while (senderB == null) {
+            		if (listener instanceof DedicatedServer) {
+            			senderB = p_184881_1_.server.getConsoleSender();
+            		} else if (listener instanceof CommandBlockBaseLogic) {
+            			senderB = ((CommandBlockBaseLogic) listener).sender;
+            		//} else if (listener instanceof ProxyListener) {
+            			//listener = ((ProxyListener) listener).base; // Search deeper
+            		} else if (VanillaCommandWrapper.lastSender != null) {
+            			senderB = VanillaCommandWrapper.lastSender;
+            		} else if (listener.func_174793_f() != null) {
+            			senderB = listener.func_174793_f().getBukkitEntity();
+            		} else {
+            			throw new CommandException("Unhandled executor " + p_184881_2_.getClass().getSimpleName(), new Object[0]);
+            		}
+            	}
+            	//int j = CommandBlockBaseLogic.executeCommand(icommandsender, new ProxiedNativeCommandSender(icommandsender, senderB, entity.getBukkitEntity()), s); 
+            	// CraftBukkit end
 
-                if (j < 1)
-                {
-                    throw new CommandException("commands.execute.allInvocationsFailed", new Object[] {s});
-                }
+                //if (j < 1)
+                //{
+                //    throw new CommandException("commands.execute.allInvocationsFailed", new Object[] {s});
+                //}
             }
             catch (Throwable var24)
             {
+            	// CraftBukkit start
+            	if (var24 instanceof CommandException) {
+            		throw (CommandException) var24;
+            	}
+            	// CraftBukkit end
                 throw new CommandException("commands.execute.failed", new Object[] {s, entity.func_70005_c_()});
             }
         }
