--- ../src-base/minecraft/net/minecraft/world/WorldServer.java
+++ ../src-work/minecraft/net/minecraft/world/WorldServer.java
@@ -78,15 +78,25 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+//CraftBukkit start
+import java.util.logging.Level;
 
+import org.bukkit.WeatherType;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.util.HashTreeSet;
+
+import org.bukkit.event.block.BlockFormEvent;
+import org.bukkit.event.weather.LightningStrikeEvent;
+// CraftBukkit end
+
 public class WorldServer extends World implements IThreadListener
 {
     private static final Logger field_147491_a = LogManager.getLogger();
     private final MinecraftServer field_73061_a;
-    private final EntityTracker field_73062_L;
+    public final EntityTracker field_73062_L;
     private final PlayerChunkMap field_73063_M;
     private final Set<NextTickListEntry> field_73064_N = Sets.<NextTickListEntry>newHashSet();
-    private final TreeSet<NextTickListEntry> field_73065_O = new TreeSet();
+    private final TreeSet<NextTickListEntry> field_73065_O = new TreeSet<NextTickListEntry>();
     private final Map<UUID, Entity> field_175741_N = Maps.<UUID, Entity>newHashMap();
     public boolean field_73058_d;
     private boolean field_73068_P;
@@ -101,11 +111,14 @@
     /** Stores the recently processed (lighting) chunks */
     protected Set<ChunkPos> doneChunks = new java.util.HashSet<ChunkPos>();
     public List<Teleporter> customTeleporters = new ArrayList<Teleporter>();
+    public final int dimension;
 
-    public WorldServer(MinecraftServer p_i45921_1_, ISaveHandler p_i45921_2_, WorldInfo p_i45921_3_, int p_i45921_4_, Profiler p_i45921_5_)
+    public WorldServer(MinecraftServer server, ISaveHandler saveHandlerIn, WorldInfo info, int dimensionId, Profiler profilerIn, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen)
     {
-        super(p_i45921_2_, p_i45921_3_, net.minecraftforge.common.DimensionManager.createProviderFor(p_i45921_4_), p_i45921_5_, false);
-        this.field_73061_a = p_i45921_1_;
+        super(saveHandlerIn, info, net.minecraftforge.common.DimensionManager.createProviderFor(dimensionId), profilerIn, false, gen, env);
+        this.dimension = dimensionId;
+        this.pvpMode = server.func_71219_W();
+        this.field_73061_a = server;
         this.field_73062_L = new EntityTracker(this);
         this.field_73063_M = new PlayerChunkMap(this);
         // Guarantee the dimension ID was not reset by the provider
@@ -113,12 +126,13 @@
         this.field_73011_w.func_76558_a(this);
         this.field_73011_w.setDimension(providerDim);
         this.field_73020_y = this.func_72970_h();
-        perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler((WorldServer)this, p_i45921_2_));
-        this.field_85177_Q = new Teleporter(this);
+        perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler((WorldServer)this, saveHandlerIn));
+        //this.worldTeleporter = new Teleporter(this);
+        this.field_85177_Q = new org.bukkit.craftbukkit.CraftTravelAgent(this); // CraftBukkit
         this.func_72966_v();
         this.func_72947_a();
-        this.func_175723_af().func_177725_a(p_i45921_1_.func_175580_aG());
-        net.minecraftforge.common.DimensionManager.setWorld(p_i45921_4_, this, field_73061_a);
+        this.func_175723_af().func_177725_a(server.func_175580_aG());
+        net.minecraftforge.common.DimensionManager.setWorld(dimensionId, this, field_73061_a);
     }
 
     public World func_175643_b()
@@ -340,7 +354,7 @@
         this.field_72986_A.func_76087_c(j);
     }
 
-    protected boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_)
+    public boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_)
     {
         return this.func_72863_F().func_73149_a(p_175680_1_, p_175680_2_);
     }
@@ -1302,12 +1316,25 @@
 
     public void func_180505_a(EnumParticleTypes p_180505_1_, boolean p_180505_2_, double p_180505_3_, double p_180505_5_, double p_180505_7_, int p_180505_9_, double p_180505_10_, double p_180505_12_, double p_180505_14_, double p_180505_16_, int... p_180505_18_)
     {
-        SPacketParticles spacketparticles = new SPacketParticles(p_180505_1_, p_180505_2_, (float)p_180505_3_, (float)p_180505_5_, (float)p_180505_7_, (float)p_180505_10_, (float)p_180505_12_, (float)p_180505_14_, (float)p_180505_16_, p_180505_9_, p_180505_18_);
+        /*SPacketParticles spacketparticles = new SPacketParticles(particleType, longDistance, (float)xCoord, (float)yCoord, (float)zCoord, (float)xOffset, (float)yOffset, (float)zOffset, (float)particleSpeed, numberOfParticles, particleArguments);
 
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_73010_i.get(i);
-            this.func_184159_a(entityplayermp, p_180505_2_, p_180505_3_, p_180505_5_, p_180505_7_, spacketparticles);
+            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.playerEntities.get(i);
+            this.sendPacketWithinDistance(entityplayermp, longDistance, xCoord, yCoord, zCoord, spacketparticles);
+        }*/
+    	sendParticles(null, p_180505_1_, p_180505_2_, p_180505_3_, p_180505_5_, p_180505_7_, p_180505_9_, p_180505_10_, p_180505_12_, p_180505_14_, p_180505_16_, p_180505_18_);
+    }
+    // CraftBukkit
+    public void sendParticles(final EntityPlayerMP sender, final EnumParticleTypes enumparticle, final boolean flag, final double d0, final double d1, final double d2, final int i, final double d3, final double d4, final double d5, final double d6, final int... aint) {
+        final SPacketParticles packetplayoutworldparticles = new SPacketParticles(enumparticle, flag, (float)d0, (float)d1, (float)d2, (float)d3, (float)d4, (float)d5, (float)d6, i, aint);
+        for (int j = 0; j < this.field_73010_i.size(); ++j) {
+            final EntityPlayerMP entityplayer = (EntityPlayerMP) this.field_73010_i.get(j);
+            if (sender == null || entityplayer.getBukkitEntity().canSee(sender.getBukkitEntity())) {
+                //final BlockPos blockposition = entityplayer.getPosition();
+                //blockposition.distanceSq(d0, d1, d2);
+                this.func_184159_a(entityplayer, flag, d0, d1, d2, packetplayoutworldparticles);
+            }
         }
     }
 
