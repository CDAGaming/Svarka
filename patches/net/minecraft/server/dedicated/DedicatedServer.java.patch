--- ../src-base/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
+++ ../src-work/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
@@ -39,11 +39,27 @@
 import net.minecraft.world.World;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
+import net.minecraft.world.chunk.storage.AnvilSaveConverter;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.event.server.RemoteServerCommandEvent;
+import org.bukkit.event.server.ServerCommandEvent;
 
+//CraftBukkit start
+import java.io.PrintStream;
+import org.apache.logging.log4j.Level;
+
+import org.bukkit.craftbukkit.LoggerOutputStream;
+import org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender;
+import org.bukkit.event.server.ServerCommandEvent;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.event.server.RemoteServerCommandEvent;
+// CraftBukkit end
+
 @SideOnly(Side.SERVER)
 public class DedicatedServer extends MinecraftServer implements IServer
 {
@@ -51,18 +67,18 @@
     private static final Pattern field_189647_l = Pattern.compile("^[a-fA-F0-9]{40}$");
     public final List<PendingCommand> field_71341_l = Collections.<PendingCommand>synchronizedList(Lists.<PendingCommand>newArrayList());
     private RConThreadQuery field_71342_m;
-    private final RConConsoleSource field_184115_n = new RConConsoleSource(this);
+    public final RConConsoleSource field_184115_n = new RConConsoleSource(this);
     private RConThreadMain field_71339_n;
-    private PropertyManager field_71340_o;
+    public PropertyManager field_71340_o;
     private ServerEula field_154332_n;
     private boolean field_71338_p;
     private GameType field_71337_q;
     private boolean field_71335_s;
     public static boolean allowPlayerLogins = false;
 
-    public DedicatedServer(File p_i47086_1_, DataFixer p_i47086_2_, YggdrasilAuthenticationService p_i47086_3_, MinecraftSessionService p_i47086_4_, GameProfileRepository p_i47086_5_, PlayerProfileCache p_i47086_6_)
+    public DedicatedServer(joptsimple.OptionSet options/*, File anvilFileIn*/, DataFixer dataFixerIn, YggdrasilAuthenticationService authServiceIn, MinecraftSessionService sessionServiceIn, GameProfileRepository profileRepoIn, PlayerProfileCache profileCacheIn)
     {
-        super(p_i47086_1_, Proxy.NO_PROXY, p_i47086_2_, p_i47086_3_, p_i47086_4_, p_i47086_5_, p_i47086_6_);
+        super(options, Proxy.NO_PROXY, dataFixerIn, authServiceIn, sessionServiceIn, profileRepoIn, profileCacheIn);
         Thread thread = new Thread("Server Infinisleeper")
         {
             {
@@ -92,6 +108,11 @@
         {
             public void run()
             {
+            	// CraftBukkit start
+            	if (!org.bukkit.craftbukkit.Main.useConsole) {
+            		return;
+            	}
+            	// CraftBukkit end
                 if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
                 BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));
                 String s4;
@@ -121,7 +142,8 @@
         net.minecraftforge.fml.common.FMLCommonHandler.instance().onServerStart(this);
 
         field_155771_h.info("Loading properties");
-        this.field_71340_o = new PropertyManager(new File("server.properties"));
+        //this.settings = new PropertyManager(new File("server.properties"));
+        this.field_71340_o = new PropertyManager(this.options); // CraftBukkit - CLI argument support
         this.field_154332_n = new ServerEula(new File("eula.txt"));
 
         if (!this.field_154332_n.func_154346_a())
@@ -191,7 +213,7 @@
                 field_155771_h.warn("Perhaps a server is already running on that port?");
                 return false;
             }
-
+            this.func_184105_a(new DedicatedPlayerList(this));
             if (!this.func_71266_T())
             {
                 field_155771_h.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
@@ -212,7 +234,8 @@
             else
             {
                 net.minecraftforge.fml.common.FMLCommonHandler.instance().onServerStarted();
-                this.func_184105_a(new DedicatedPlayerList(this));
+                //this.setPlayerList(new DedicatedPlayerList(this)); // CB - ^
+                this.field_71310_m = new AnvilSaveConverter(this.server.getWorldContainer(), this.func_184110_aI());
                 long j = System.nanoTime();
 
                 if (this.func_71270_I() == null)
@@ -280,7 +303,17 @@
                     field_155771_h.info("Starting remote control listener");
                     this.field_71339_n = new RConThreadMain(this);
                     this.field_71339_n.func_72602_a();
+                    this.remoteConsole = new CraftRemoteConsoleCommandSender(this.field_184115_n); // CB
                 }
+                // CraftBukkit start
+                if (this.server.getBukkitSpawnRadius() > -1) {
+                	DedicatedServer.field_155771_h.info("'settings.spawn-radius' in bukkit.yml has been moved to 'spawn-protection' in server.properties. I will move your config for you.");
+                	this.field_71340_o.field_73672_b.remove("spawn-protection");
+                	this.field_71340_o.func_73669_a("spawn-protection", this.server.getBukkitSpawnRadius());
+                	this.server.removeBukkitSpawnRadius();
+                	this.field_71340_o.func_73668_b();
+                }
+                // CraftBukkit end
 
                 if (this.func_175593_aQ() > 0L)
                 {
@@ -420,7 +453,14 @@
         while (!this.field_71341_l.isEmpty())
         {
             PendingCommand pendingcommand = (PendingCommand)this.field_71341_l.remove(0);
-            this.func_71187_D().func_71556_a(pendingcommand.field_73701_b, pendingcommand.field_73702_a);
+            //this.getCommandManager().executeCommand(pendingcommand.sender, pendingcommand.command);
+            // CraftBukkit start - ServerCommand for preprocessing
+            ServerCommandEvent event = new ServerCommandEvent(console, pendingcommand.field_73702_a);
+            server.getPluginManager().callEvent(event);
+            if (event.isCancelled()) continue;
+            pendingcommand = new PendingCommand(event.getCommand(), pendingcommand.field_73701_b);
+            server.dispatchServerCommand(console, pendingcommand);
+            // CraftBukkit end
         }
     }
 
@@ -679,13 +719,65 @@
 
     public String func_71258_A()
     {
-        return "";
+        //return "";
+    	// CraftBukkit start - Whole method
+    	StringBuilder result = new StringBuilder();
+    	org.bukkit.plugin.Plugin[] plugins = server.getPluginManager().getPlugins();
+    	result.append(server.getName());
+    	result.append(" on Bukkit ");
+    	result.append(server.getBukkitVersion());
+    	if (plugins.length > 0 && server.getQueryPlugins()) {
+    		result.append(": ");
+    		for (int i = 0; i < plugins.length; i++) {
+    			if (i > 0) {
+    				result.append("; ");
+    			}
+    			result.append(plugins[i].getDescription().getName());
+    			result.append(" ");
+    			result.append(plugins[i].getDescription().getVersion().replaceAll(";", ","));
+    		}
+    	}
+    	return result.toString();
+    	// CraftBukkit end
     }
 
-    public String func_71252_i(String p_71252_1_)
+    public String func_71252_i(final String p_71252_1_)
     {
-        this.field_184115_n.func_70007_b();
-        this.field_71321_q.func_71556_a(this.field_184115_n, p_71252_1_);
-        return this.field_184115_n.func_70008_c();
+        //this.rconConsoleSource.resetLog();
+        //this.commandManager.executeCommand(this.rconConsoleSource, command);
+        //return this.rconConsoleSource.getLogContents();
+    	Waitable<String> waitable = new Waitable<String>() {
+    		@Override
+    		protected String evaluate() {
+    			field_184115_n.func_70007_b();
+    			// Event changes start
+    			RemoteServerCommandEvent event = new RemoteServerCommandEvent(remoteConsole, p_71252_1_);
+    			server.getPluginManager().callEvent(event);
+    			if (event.isCancelled()) {
+    				return "";
+    			}
+    			// Event change end
+    			PendingCommand serverCommand = new PendingCommand(event.getCommand(), field_184115_n);
+    			server.dispatchServerCommand(remoteConsole, serverCommand);
+    			return field_184115_n.func_70008_c();
+    		}
+    	};
+    	processQueue.add(waitable);
+    	try {
+    		return waitable.get();
+    	} catch (java.util.concurrent.ExecutionException e) {
+    		throw new RuntimeException("Exception processing rcon command " + p_71252_1_, e.getCause());
+    	} catch (InterruptedException e) {
+    		Thread.currentThread().interrupt(); // Maintain interrupted state
+    		throw new RuntimeException("Interrupted processing rcon command " + p_71252_1_, e);
+    	}
+    	// CraftBukkit end
     }
+    
+    // CraftBukkit start
+    @Override
+    public PropertyManager getPropertyManager() {
+    	return this.field_71340_o;
+    }
+    // CraftBukkit end
 }
