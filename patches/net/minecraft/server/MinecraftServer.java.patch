--- ../src-base/minecraft/net/minecraft/server/MinecraftServer.java
+++ ../src-work/minecraft/net/minecraft/server/MinecraftServer.java
@@ -52,6 +52,7 @@
 import net.minecraft.profiler.Profiler;
 import net.minecraft.profiler.Snooper;
 import net.minecraft.server.dedicated.DedicatedServer;
+import net.minecraft.server.dedicated.PropertyManager;
 import net.minecraft.server.management.PlayerList;
 import net.minecraft.server.management.PlayerProfileCache;
 import net.minecraft.util.IProgressUpdate;
@@ -76,6 +77,7 @@
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
 import net.minecraft.world.chunk.storage.AnvilSaveConverter;
+import net.minecraft.world.chunk.storage.AnvilSaveHandler;
 import net.minecraft.world.demo.DemoWorldServer;
 import net.minecraft.world.storage.ISaveFormat;
 import net.minecraft.world.storage.ISaveHandler;
@@ -85,14 +87,31 @@
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import jline.console.ConsoleReader;
+import joptsimple.OptionSet;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.Main;
+import org.bukkit.event.world.WorldInitEvent;
+import org.bukkit.generator.ChunkGenerator;
 
+//CraftBukkit start
+import jline.console.ConsoleReader;
+import joptsimple.OptionSet;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.Main;
+import org.bukkit.event.world.WorldInitEvent;
+import org.bukkit.generator.ChunkGenerator;
+// CraftBukkit end
+
 public abstract class MinecraftServer implements Runnable, ICommandSender, IThreadListener, ISnooperInfo
 {
-    private static final Logger field_147145_h = LogManager.getLogger();
+    public static final Logger field_147145_h = LogManager.getLogger();
     public static final File field_152367_a = new File("usercache.json");
-    private final ISaveFormat field_71310_m;
+    public ISaveFormat field_71310_m;
     private final Snooper field_71307_n = new Snooper("server", this, func_130071_aq());
-    private final File field_71308_o;
+    public File field_71308_o;
     private final List<ITickable> field_71322_p = Lists.<ITickable>newArrayList();
     public final ICommandManager field_71321_q;
     public final Profiler field_71304_b = new Profiler();
@@ -146,20 +165,60 @@
     private long field_175591_ab = func_130071_aq();
     @SideOnly(Side.CLIENT)
     private boolean field_184111_ab;
+    // CraftBukkit start
+    //public List<WorldServer> worlds = new ArrayList<WorldServer>();
+    public org.bukkit.craftbukkit.CraftServer server;
+    public OptionSet options;
+    public org.bukkit.command.ConsoleCommandSender console;
+    public org.bukkit.command.RemoteConsoleCommandSender remoteConsole;
+    public ConsoleReader reader;
+    public static int currentTick = (int) (System.currentTimeMillis() / 50);
+    public final Thread primaryThread;
+    public java.util.Queue<Runnable> processQueue = new java.util.concurrent.ConcurrentLinkedQueue<Runnable>();
+    public int autosavePeriod;
+    // CraftBukkit end
 
-    public MinecraftServer(File p_i47054_1_, Proxy p_i47054_2_, DataFixer p_i47054_3_, YggdrasilAuthenticationService p_i47054_4_, MinecraftSessionService p_i47054_5_, GameProfileRepository p_i47054_6_, PlayerProfileCache p_i47054_7_)
+    public MinecraftServer(OptionSet options, Proxy proxyIn, DataFixer dataFixerIn, YggdrasilAuthenticationService authServiceIn, MinecraftSessionService sessionServiceIn, GameProfileRepository profileRepoIn, PlayerProfileCache profileCacheIn)
     {
-        this.field_110456_c = p_i47054_2_;
-        this.field_152364_T = p_i47054_4_;
-        this.field_147143_S = p_i47054_5_;
-        this.field_152365_W = p_i47054_6_;
-        this.field_152366_X = p_i47054_7_;
-        this.field_71308_o = p_i47054_1_;
+        this.field_110456_c = proxyIn;
+        this.field_152364_T = authServiceIn;
+        this.field_147143_S = sessionServiceIn;
+        this.field_152365_W = profileRepoIn;
+        this.field_152366_X = profileCacheIn;
+        //this.anvilFile = anvilFileIn; // CraftBukkit
         this.field_147144_o = new NetworkSystem(this);
         this.field_71321_q = this.func_175582_h();
-        this.field_71310_m = new AnvilSaveConverter(p_i47054_1_, p_i47054_3_);
-        this.field_184112_s = p_i47054_3_;
+        //this.anvilConverterForAnvilFile = new AnvilSaveConverter(anvilFileIn, dataFixerIn); // CraftBukkit - moved to DedicatedServer.init
+        this.field_184112_s = dataFixerIn;
+        // CraftBukkit start
+        this.options = options;
+        // Try to see if we're actually running in a terminal, disable jline if not
+        if (System.console() == null && System.getProperty("jline.terminal") == null) {
+        	System.setProperty("jline.terminal", "jline.UnsupportedTerminal");
+        	Main.useJline = false;
+        }
+        
+        try {
+        	reader = new ConsoleReader(System.in, System.out);
+        	reader.setExpandEvents(false); // Avoid parsing exceptions for uncommonly used event designators
+        } catch (Throwable e) {
+        	try {
+        		// Try again with jline disabled for Windows users without C++ 2008 Redistributable
+        		System.setProperty("jline.terminal", "jline.UnsupportedTerminal");
+        		System.setProperty("user.language", "en");
+        		Main.useJline = false;
+        		reader = new ConsoleReader(System.in, System.out);
+        		reader.setExpandEvents(false);
+        	} catch (IOException ex) {
+        		field_147145_h.warn((String) null, ex);
+        	}
+        }
+        Runtime.getRuntime().addShutdownHook(new org.bukkit.craftbukkit.util.ServerShutdownThread(this));
+        this.field_175590_aa = primaryThread = new Thread(this, "Server thread"); // Moved from main
     }
+    
+    public abstract PropertyManager getPropertyManager();
+    // CraftBukkit end
 
     public ServerCommandManager func_175582_h()
     {
@@ -249,11 +308,21 @@
             worldsettings = new WorldSettings(worldinfo);
         }
 
-        WorldServer overWorld = (WorldServer)(func_71242_L() ? new DemoWorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b() : new WorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b());
+        WorldServer overWorld = (WorldServer)(func_71242_L() ? new DemoWorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b() : new WorldServer(this, isavehandler, worldinfo, 0, field_71304_b, org.bukkit.World.Environment.getEnvironment(0), this.server.getGenerator(p_71247_1_)).func_175643_b());
         overWorld.func_72963_a(worldsettings);
         for (int dim : net.minecraftforge.common.DimensionManager.getStaticDimensionIDs())
         {
-            WorldServer world = (dim == 0 ? overWorld : (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, field_71304_b).func_175643_b());
+        	WorldServer world;
+        	if(dim == 0) {
+        		world = overWorld;
+        	}
+        	else {
+        		final String name = p_71247_1_ + "_" + org.bukkit.World.Environment.getEnvironment(dim).toString().toLowerCase();
+        		final ChunkGenerator gen = this.server.getGenerator(name);
+        		final ISaveHandler save = new AnvilSaveHandler(this.server.getWorldContainer(), name, true, field_184112_s);
+        		final WorldInfo data = save.func_75757_d();
+            	world = (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, field_71304_b, data, org.bukkit.World.Environment.getEnvironment(dim), gen).func_175643_b();
+        	}
             world.func_72954_a(new ServerWorldEventHandler(this, world));
 
             if (!this.func_71264_H())
@@ -261,6 +330,8 @@
                 world.func_72912_H().func_76060_a(this.func_71265_f());
             }
             net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Load(world));
+            this.server.getPluginManager().callEvent(new WorldInitEvent(world.getWorld()));
+            //TODO!!!
         }
 
         this.field_71318_t.func_72364_a(new WorldServer[]{ overWorld });
@@ -337,6 +408,7 @@
     {
         this.field_71302_d = null;
         this.field_71303_e = 0;
+        this.server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.POSTWORLD); // CraftBukkit
     }
 
     public void func_71267_a(boolean p_71267_1_)
@@ -1320,6 +1392,13 @@
     {
         return this;
     }
+    
+    // CraftBukkit start
+    @Deprecated
+    public static MinecraftServer getServerInst() {
+    	return (Bukkit.getServer() instanceof CraftServer) ? ((CraftServer) Bukkit.getServer()).getServer() : null;
+    }
+    // CraftBukkit end
 
     public int func_175580_aG()
     {
@@ -1400,10 +1479,14 @@
     @SideOnly(Side.SERVER)
     public static void main(String[] p_main_0_)
     {
+    	OptionSet options = org.bukkit.craftbukkit.Main.main(p_main_0_);
+    	if(options == null) 
+    		return;
         Bootstrap.func_151354_b();
 
         try
         {
+        	/*
             boolean flag = true;
             String s = null;
             String s1 = ".";
@@ -1466,52 +1549,72 @@
                 {
                     ++j;
                 }
-            }
-
+            }*/
+        	String s1 = ".";
             YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
             MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
             GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
             PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(s1, field_152367_a.getName()));
-            final DedicatedServer dedicatedserver = new DedicatedServer(new File(s1), DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
+            //final DedicatedServer dedicatedserver = new DedicatedServer(new File(s1), DataFixesManager.createFixer(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
+            final DedicatedServer dedicatedserver = new DedicatedServer(options, DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
 
+            /*
             if (s != null)
             {
-                dedicatedserver.func_71224_l(s);
+                dedicatedserver.setServerOwner(s);
             }
 
             if (s2 != null)
             {
-                dedicatedserver.func_71261_m(s2);
+                dedicatedserver.setFolderName(s2);
             }
 
             if (i >= 0)
             {
-                dedicatedserver.func_71208_b(i);
+                dedicatedserver.setServerPort(i);
             }
 
             if (flag1)
             {
-                dedicatedserver.func_71204_b(true);
+                dedicatedserver.setDemo(true);
             }
 
             if (flag2)
             {
-                dedicatedserver.func_71194_c(true);
+                dedicatedserver.canCreateBonusChest(true);
             }
 
             if (flag && !GraphicsEnvironment.isHeadless())
             {
-                dedicatedserver.func_120011_ar();
+                dedicatedserver.setGuiEnabled();
             }
 
-            dedicatedserver.func_71256_s();
+            dedicatedserver.startServerThread();
             Runtime.getRuntime().addShutdownHook(new Thread("Server Shutdown Thread")
             {
                 public void run()
                 {
-                    dedicatedserver.func_71260_j();
+                    dedicatedserver.stopServer();
                 }
             });
+            */
+            if (options.has("port")) {
+            	int port = (Integer) options.valueOf("port");
+            	if (port > 0) {
+            		dedicatedserver.func_71208_b(port);
+            	}
+            }
+            	
+            if (options.has("universe")) {
+            	dedicatedserver.field_71308_o = (File) options.valueOf("universe");
+            }
+            	
+            if (options.has("world")) {
+            	dedicatedserver.func_71246_n((String) options.valueOf("world"));
+            }
+            	
+            dedicatedserver.primaryThread.start();
+            // CraftBukkit end
         }
         catch (Exception exception)
         {
@@ -1528,7 +1631,8 @@
     @SideOnly(Side.SERVER)
     public boolean func_71239_B()
     {
-        return false;
+        //return false;
+    	return this.getPropertyManager().func_73670_a("debug", false); // CraftBukkit - don't hardcode
     }
 
     @SideOnly(Side.SERVER)
