--- ../src-base/minecraft/net/minecraft/server/MinecraftServer.java
+++ ../src-work/minecraft/net/minecraft/server/MinecraftServer.java
@@ -10,10 +10,14 @@
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
+
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufOutputStream;
 import io.netty.buffer.Unpooled;
 import io.netty.handler.codec.base64.Base64;
+import jline.console.ConsoleReader;
+import joptsimple.OptionSet;
+
 import java.awt.GraphicsEnvironment;
 import java.awt.image.BufferedImage;
 import java.io.File;
@@ -22,6 +26,7 @@
 import java.net.Proxy;
 import java.security.KeyPair;
 import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
@@ -32,8 +37,10 @@
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
+
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
+
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandResultStats;
 import net.minecraft.command.ICommandManager;
@@ -52,6 +59,7 @@
 import net.minecraft.profiler.Profiler;
 import net.minecraft.profiler.Snooper;
 import net.minecraft.server.dedicated.DedicatedServer;
+import net.minecraft.server.dedicated.PropertyManager;
 import net.minecraft.server.management.PlayerList;
 import net.minecraft.server.management.PlayerProfileCache;
 import net.minecraft.util.IProgressUpdate;
@@ -81,17 +89,29 @@
 import net.minecraft.world.storage.WorldInfo;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.Main;
 
-public abstract class MinecraftServer implements Runnable, ICommandSender, IThreadListener, ISnooperInfo
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.Main;
+// CraftBukkit end
+
+import scala.reflect.internal.Trees.This;
+
+public abstract class MinecraftServer implements ICommandSender, IThreadListener, ISnooperInfo
 {
-    private static final Logger field_147145_h = LogManager.getLogger();
+    public static final Logger field_147145_h = LogManager.getLogger();
     public static final File field_152367_a = new File("usercache.json");
-    private final ISaveFormat field_71310_m;
+    protected ISaveFormat field_71310_m;
     private final Snooper field_71307_n = new Snooper("server", this, func_130071_aq());
-    private final File field_71308_o;
+    public File field_71308_o;
     private final List<ITickable> field_71322_p = Lists.<ITickable>newArrayList();
     protected final ICommandManager field_71321_q;
     public final Profiler field_71304_b = new Profiler();
@@ -141,11 +161,68 @@
     private final PlayerProfileCache field_152366_X;
     private long field_147142_T = 0L;
     protected final Queue < FutureTask<? >> field_175589_i = Queues. < FutureTask<? >> newArrayDeque();
-    private Thread field_175590_aa;
+    public Thread field_175590_aa;
     private long field_175591_ab = func_130071_aq();
+    
+    // CraftBukkit start
+    // public List<WorldServer> worlds = new ArrayList<WorldServer>(); // Svarka - NO!
+    public org.bukkit.craftbukkit.CraftServer server;
+    public OptionSet options;
+    public org.bukkit.command.ConsoleCommandSender console;
+    public org.bukkit.command.RemoteConsoleCommandSender remoteConsole;
+    public ConsoleReader reader;
+    public static int currentTick = (int) (System.currentTimeMillis() / 50);
+    // public Thread primaryThread; // Svarka - no!
+    public java.util.Queue<Runnable> processQueue = new java.util.concurrent.ConcurrentLinkedQueue<Runnable>();
+    public int autosavePeriod;
+    // CraftBukkit end
+    
     @SideOnly(Side.CLIENT)
     private boolean field_184111_ab;
 
+    // CraftBukkit edition
+    public MinecraftServer(OptionSet options, Proxy proxyIn, DataFixer dataFixerIn, YggdrasilAuthenticationService authServiceIn, MinecraftSessionService sessionServiceIn, GameProfileRepository profileRepoIn, PlayerProfileCache profileCacheIn) {
+    	this.field_110456_c = proxyIn;
+        this.field_152364_T = authServiceIn;
+        this.field_147143_S = sessionServiceIn;
+        this.field_152365_W = profileRepoIn;
+        this.field_152366_X = profileCacheIn;
+        //this.anvilFile = anvilFileIn; // CraftBukkit
+        this.field_147144_o = new NetworkSystem(this);
+        this.field_71321_q = this.func_175582_h();
+        //this.anvilConverterForAnvilFile = new AnvilSaveConverter(anvilFileIn, dataFixerIn); // CraftBukkit - moved to DedicatedServer.init
+        this.field_184112_s = dataFixerIn;
+        
+        this.options = options;
+        
+        // Try to see if we're actually running in a terminal, disable jline if not
+        if (System.console() == null && System.getProperty("jline.terminal") == null) {
+            System.setProperty("jline.terminal", "jline.UnsupportedTerminal");
+            Main.useJline = false;
+        }
+
+        try {
+            reader = new ConsoleReader(System.in, System.out);
+            reader.setExpandEvents(false); // Avoid parsing exceptions for uncommonly used event designators
+        } catch (Throwable e) {
+            try {
+                // Try again with jline disabled for Windows users without C++ 2008 Redistributable
+                System.setProperty("jline.terminal", "jline.UnsupportedTerminal");
+                System.setProperty("user.language", "en");
+                Main.useJline = false;
+                reader = new ConsoleReader(System.in, System.out);
+                reader.setExpandEvents(false);
+            } catch (IOException ex) {
+                field_147145_h.warn((String) null, ex);
+            }
+        }
+        Runtime.getRuntime().addShutdownHook(new org.bukkit.craftbukkit.util.ServerShutdownThread(this));
+
+        //this.serverThread = primaryThread = new Thread(this, "Server thread"); // Moved from main // Svarka \/
+        this.field_175590_aa = Thread.currentThread();
+        this.field_175590_aa.setName("Server thread");
+    }
+    
     public MinecraftServer(File p_i47054_1_, Proxy p_i47054_2_, DataFixer p_i47054_3_, YggdrasilAuthenticationService p_i47054_4_, MinecraftSessionService p_i47054_5_, GameProfileRepository p_i47054_6_, PlayerProfileCache p_i47054_7_)
     {
         this.field_110456_c = p_i47054_2_;
@@ -159,6 +236,9 @@
         this.field_71310_m = new AnvilSaveConverter(p_i47054_1_, p_i47054_3_);
         this.field_184112_s = p_i47054_3_;
     }
+    
+    public PropertyManager getPropertyManager() {return null;};
+    // CraftBukkit end
 
     protected ServerCommandManager func_175582_h()
     {
@@ -172,7 +252,7 @@
         if (this.func_71254_M().func_75801_b(p_71237_1_))
         {
             field_147145_h.info("Converting map!");
-            this.func_71192_d("menu.convertingLevel");
+            // this.setUserMessage("menu.convertingLevel"); // Svarka - indeed?
             this.func_71254_M().func_75805_a(p_71237_1_, new IProgressUpdate()
             {
                 private long field_96245_b = System.currentTimeMillis();
@@ -202,13 +282,13 @@
         }
     }
 
+    @Deprecated
     protected synchronized void func_71192_d(String p_71192_1_)
     {
         this.field_71298_S = p_71192_1_;
     }
 
     @SideOnly(Side.CLIENT)
-
     public synchronized String func_71195_b_()
     {
         return this.field_71298_S;
@@ -217,7 +297,7 @@
     protected void func_71247_a(String p_71247_1_, String p_71247_2_, long p_71247_3_, WorldType p_71247_5_, String p_71247_6_)
     {
         this.func_71237_c(p_71247_1_);
-        this.func_71192_d("menu.loadingLevel");
+        // this.setUserMessage("menu.loadingLevel"); // Svarka - indeed?
         ISaveHandler isavehandler = this.field_71310_m.func_75804_a(p_71247_1_, true);
         this.func_175584_a(this.func_71270_I(), isavehandler);
         WorldInfo worldinfo = isavehandler.func_75757_d();
@@ -248,12 +328,17 @@
             worldsettings = new WorldSettings(worldinfo);
         }
 
-        WorldServer overWorld = (WorldServer)(func_71242_L() ? new DemoWorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b() : new WorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b());
+        org.bukkit.generator.ChunkGenerator gen = this.server.getGenerator(Integer.toString(0));
+        WorldServer overWorld = (WorldServer)(func_71242_L() ? new DemoWorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b() : new WorldServer(this, isavehandler, worldinfo, 0, field_71304_b, org.bukkit.World.Environment.getEnvironment(0), gen).func_175643_b());
         overWorld.func_72963_a(worldsettings);
         for (int dim : net.minecraftforge.common.DimensionManager.getStaticDimensionIDs())
         {
-            WorldServer world = (dim == 0 ? overWorld : (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, field_71304_b).func_175643_b());
+        	
+            WorldServer world = (dim == 0 ? overWorld : (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, field_71304_b, org.bukkit.World.Environment.getEnvironment(dim), this.server.getGenerator(Integer.toString(dim))).func_175643_b());
             world.func_72954_a(new ServerWorldEventHandler(this, world));
+            if(dim == 0) {	
+            	this.server.scoreboardManager = new org.bukkit.craftbukkit.scoreboard.CraftScoreboardManager(this, world.func_96441_U());
+            }
 
             if (!this.func_71264_H())
             {
@@ -269,12 +354,12 @@
 
     protected void func_71222_d()
     {
-        int i = 16;
-        int j = 4;
-        int k = 192;
-        int l = 625;
+        //int i = 16; // Svarka - indeed?
+        //int j = 4; // Svarka - indeed?
+        //int k = 192; // Svarka - indeed?
+        //int l = 625; // Svarka - indeed?
         int i1 = 0;
-        this.func_71192_d("menu.generatingTerrain");
+        // this.setUserMessage("menu.generatingTerrain"); // Svarka - indeed?
         int j1 = 0;
         field_147145_h.info("Preparing start region for level " + j1);
         WorldServer worldserver = net.minecraftforge.common.DimensionManager.getWorld(j1);
@@ -336,6 +421,7 @@
     {
         this.field_71302_d = null;
         this.field_71303_e = 0;
+        this.server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.POSTWORLD); // CraftBukkit
     }
 
     public void func_71267_a(boolean p_71267_1_)
@@ -361,6 +447,11 @@
         }
     }
 
+    // CraftBukkit start
+    private boolean hasStopped = false;
+    private final Object stopLock = new Object();
+    // CraftBukkit end
+    
     public void func_71260_j()
     {
         field_147145_h.info("Stopping server");
@@ -442,7 +533,8 @@
 
                     if (j > 2000L && this.field_175591_ab - this.field_71299_R >= 15000L)
                     {
-                        field_147145_h.warn("Can\'t keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", new Object[] {Long.valueOf(j), Long.valueOf(j / 50L)});
+                    	if(server.getWarnOnOverload())
+                    		field_147145_h.warn("Can\'t keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", new Object[] {Long.valueOf(j), Long.valueOf(j / 50L)});
                         j = 2000L;
                         this.field_71299_R = this.field_175591_ab;
                     }
@@ -747,9 +839,11 @@
 
     public void func_71256_s()
     {
+    	/* CraftBukkit start - prevent abuse
         net.minecraftforge.fml.common.StartupQuery.reset();
-        this.field_175590_aa = new Thread(this, "Server thread");
-        this.field_175590_aa.start();
+        this.serverThread = new Thread(this, "Server thread");
+        this.serverThread.start();
+        // CraftBukkit end */
     }
 
     public File func_71209_f(String p_71209_1_)
@@ -1401,10 +1495,12 @@
     @SideOnly(Side.SERVER)
     public static void main(String[] p_main_0_)
     {
+    	OptionSet options = Main.main(p_main_0_);
         Bootstrap.func_151354_b();
 
         try
         {
+        	/* CraftBukkit start - Replace everything
             boolean flag = true;
             String s = null;
             String s1 = ".";
@@ -1468,51 +1564,75 @@
                     ++j;
                 }
             }
+            */ // CraftBukkit end
+        	String s1 = "."; // PAIL?
 
             YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
             MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
             GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
             PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(s1, field_152367_a.getName()));
-            final DedicatedServer dedicatedserver = new DedicatedServer(new File(s1), DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
+            final DedicatedServer dedicatedserver = new DedicatedServer(options, DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
 
+            /* CraftBukkit start
             if (s != null)
             {
-                dedicatedserver.func_71224_l(s);
+                dedicatedserver.setServerOwner(s);
             }
 
             if (s2 != null)
             {
-                dedicatedserver.func_71261_m(s2);
+                dedicatedserver.setFolderName(s2);
             }
 
             if (i >= 0)
             {
-                dedicatedserver.func_71208_b(i);
+                dedicatedserver.setServerPort(i);
             }
 
             if (flag1)
             {
-                dedicatedserver.func_71204_b(true);
+                dedicatedserver.setDemo(true);
             }
 
             if (flag2)
             {
-                dedicatedserver.func_71194_c(true);
+                dedicatedserver.canCreateBonusChest(true);
             }
 
             if (flag && !GraphicsEnvironment.isHeadless())
             {
-                dedicatedserver.func_120011_ar();
+                dedicatedserver.setGuiEnabled();
             }
 
-            dedicatedserver.func_71256_s();
+            dedicatedserver.startServerThread();
             Runtime.getRuntime().addShutdownHook(new Thread("Server Shutdown Thread")
             {
                 public void run()
                 {
-                    dedicatedserver.func_71260_j();
+                    dedicatedserver.stopServer();
                 }
             });
+            */
+            
+            if (options.has("port")) {
+            	int port = (Integer) options.valueOf("port");
+            	if (port > 0) {
+            		dedicatedserver.func_71208_b(port);
+            		}
+            }
+            	
+            if (options.has("universe")) {
+            	dedicatedserver.field_71308_o = (File) options.valueOf("universe");
+            }
+            
+            if (options.has("world")) {
+            	dedicatedserver.func_71246_n((String) options.valueOf("world"));
+            }
+            	
+            // dedicatedserver.primaryThread.start(); // Svarka
+            dedicatedserver.run();
+            
+            // CraftBukkit end
         }
         catch (Exception exception)
         {
@@ -1582,4 +1702,11 @@
     {
         return this.field_175590_aa;
     }
+    
+    // CraftBukkit start
+    //@Deprecated
+    public static MinecraftServer getServerStatic() {
+    	return (Bukkit.getServer() instanceof CraftServer) ? ((CraftServer) Bukkit.getServer()).getServer() : null;
+    }
+    // CraftBukkit end
 }
